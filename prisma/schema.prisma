generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("LOCAL_DB_URL")
}

model auth_User {
  id             Int           @id @default(autoincrement())
  name           String
  email          String        @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?       // Optional because OAuth users won't have passwords
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  // Relations
  socialLogins  auth_SocialLogin[]
  refreshTokens  auth_RefreshToken[]
}

// For OAuth providers (Google, GitHub, etc.)
model auth_SocialLogin {
  id               Int      @id @default(autoincrement())
  userId           Int
  provider         String   // "google", "github", etc.
  providerUserId   String   // Changed from providerAccountId for clarity
  providerType     String   // "oauth2", "oidc", etc.
  accessToken      String?  @db.Text  // Changed from snake_case to camelCase
  refreshToken     String?  @db.Text
  expiresAt        Int?
  tokenType        String?
  scope            String?
  idToken          String?  @db.Text
  sessionState     String?

  user auth_User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerUserId])
}

model auth_RefreshToken {
  id        Int         @id @default(autoincrement())
  token     String      @unique
  userId    Int
  user      auth_User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime    @default(now())
  isRevoked Boolean     @default(false)
  deviceInfo String?
}

model countries {
  id        String      @id @db.VarChar(20)
  name      String      @db.VarChar(50)
  exchanges exchanges[]
}

model error_symbols {
  id            Int       @id @default(autoincrement())
  symbol        String?   @db.VarChar(20)
  error_message String?   @db.VarChar(255)
  updated_at    DateTime? @default(now()) @db.Timestamp(6)
  symbols       symbols?  @relation(fields: [symbol], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model exchanges {
  id              String            @id @db.VarChar(20)
  name            String            @db.VarChar(50)
  country_id      String?           @db.VarChar(50)
  countries       countries?        @relation(fields: [country_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  symbol_profiles symbol_profiles[]
  symbols         symbols[]
}

model income_statements {
  symbol                                      String    @db.VarChar(20)
  date                                        DateTime  @db.Timestamp(6)
  period                                      String    @db.VarChar(10)
  reported_currency                           String?   @db.VarChar(10)
  cik                                         String?   @db.VarChar(20)
  filling_date                                DateTime? @db.Timestamp(6)
  accepted_date                               DateTime? @db.Timestamp(6)
  calendar_year                               String?   @db.VarChar(4)
  revenue                                     BigInt?
  cost_of_revenue                             BigInt?
  gross_profit                                BigInt?
  gross_profit_ratio                          Decimal?  @db.Decimal(45, 20)
  research_and_development_expenses           BigInt?
  general_and_administrative_expenses         BigInt?
  selling_and_marketing_expenses              BigInt?
  selling_general_and_administrative_expenses BigInt?
  other_expenses                              BigInt?
  operating_expenses                          BigInt?
  cost_and_expenses                           BigInt?
  interest_income                             BigInt?
  interest_expense                            BigInt?
  depreciation_and_amortization               BigInt?
  ebitda                                      BigInt?
  ebitda_ratio                                Decimal?  @db.Decimal(45, 20)
  operating_income                            BigInt?
  operating_income_ratio                      Decimal?  @db.Decimal(45, 20)
  total_other_income_expenses_net             BigInt?
  income_before_tax                           BigInt?
  income_before_tax_ratio                     Decimal?  @db.Decimal(45, 20)
  income_tax_expense                          BigInt?
  net_income                                  BigInt?
  net_income_ratio                            Decimal?  @db.Decimal(45, 20)
  eps                                         Decimal?  @db.Decimal(25, 10)
  eps_diluted                                 Decimal?  @db.Decimal(25, 10)
  weighted_average_shs_out                    BigInt?
  weighted_average_shs_out_dil                BigInt?
  link                                        String?   @db.VarChar(255)
  final_link                                  String?   @db.VarChar(255)
  symbols                                     symbols   @relation(fields: [symbol], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([symbol, date, period])
}

model symbol_profiles {
  symbol              String     @id @db.VarChar(20)
  exchange_short_name String?    @db.VarChar(20)
  price               Decimal?   @db.Decimal(30, 10)
  beta                Decimal?   @db.Decimal(45, 20)
  vol_avg             BigInt?
  mkt_cap             BigInt?
  last_div            Decimal?   @db.Decimal(45, 20)
  range               String?    @db.VarChar(50)
  changes             Decimal?   @db.Decimal(45, 20)
  company_name        String?    @db.VarChar(200)
  currency            String?    @db.VarChar(10)
  cik                 String?    @db.VarChar(50)
  isin                String?    @db.VarChar(50)
  cusip               String?    @db.VarChar(50)
  exchange            String?    @db.VarChar(50)
  industry            String?    @db.VarChar(200)
  website             String?    @db.VarChar(255)
  description         String?    @db.VarChar(255)
  ceo                 String?    @db.VarChar(100)
  sector              String?    @db.VarChar(50)
  country             String?    @db.VarChar(50)
  full_time_employees String?    @db.VarChar(255)
  phone               String?    @db.VarChar(50)
  address             String?    @db.VarChar(100)
  city                String?    @db.VarChar(50)
  state               String?    @db.VarChar(50)
  zip                 String?    @db.VarChar(20)
  dcf_diff            Decimal?   @db.Decimal(35, 15)
  dcf                 Decimal?   @db.Decimal(40, 20)
  image               String?    @db.VarChar(100)
  ipo_date            String?    @db.VarChar(20)
  default_image       Boolean?
  is_etf              Boolean?
  is_actively_trading Boolean?
  is_adr              Boolean?
  is_fund             Boolean?
  exchanges           exchanges? @relation(fields: [exchange_short_name], references: [id], onDelete: NoAction, onUpdate: NoAction)
  symbols             symbols    @relation(fields: [symbol], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model symbols {
  id                String              @id @db.VarChar(20)
  name              String              @db.VarChar(200)
  price             Decimal?            @db.Decimal(30, 10)
  type_id           String              @db.VarChar(20)
  exchange_id       String?             @db.VarChar(20)
  is_updated        Boolean?            @default(false)
  is_existing       Boolean?            @default(true)
  updated_at        DateTime?           @default(now()) @db.Timestamp(6)
  error_symbols     error_symbols[]
  income_statements income_statements[]
  symbol_profiles   symbol_profiles?
  exchanges         exchanges?          @relation(fields: [exchange_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  types             types               @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model types {
  id      String    @id @db.VarChar(20)
  symbols symbols[]
}
